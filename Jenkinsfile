pipeline {
    agent any

    tools {
        nodejs 'NodeJS' // Use the name of the Node.js installation configured in Jenkins Global Tool Configuration
    }

    stages {
        stage('Install Dependencies') {
            steps {
                dir('APIAutomation-PostmanNewman') { // Navigate to the directory where package.json is located
                    script {
                        // Install Node.js dependencies (like newman)
                        sh 'npm install'
                    }
                }
            }
        }

        stage('Run Newman Tests') {
            steps {
                dir('APIAutomation-PostmanNewman') { // Ensure you're in the correct directory to run tests
                    script {
                        // Run the Newman collection using the runner.js script
                        sh 'node runner.js'
                    }
                }
            }
        }

        stage('Archive Test Results') {
            steps {
                dir('APIAutomation-PostmanNewman') { // Archive the report from the correct directory
                    script {
                        // Archive the HTML report generated by the Newman test run
                        archiveArtifacts artifacts: '**/*.*', allowEmptyArchive: true
                    }
                }
            }
        }

        stage('Publish HTML Report') {
                    steps {
                        // Publish the HTML report using the HTML Publisher Plugin
                        publishHTML(target: [
                            reportName: 'Newman HTML Report',
                            reportDir: 'APIAutomation-PostmanNewman/newman',
                            reportFiles: '/*.html', // Change this if needed
                            alwaysLinkToLastBuild: true,
                            alwaysPublishLatest: true
                        ])
                    }
        }       }
    }

    post {
        always {
            cleanWs() // Clean workspace after pipeline completion
        }
        success {
            echo 'Build succeeded!'
        }
        failure {
            echo 'Build failed!'
        }
    }
}
